* Project set-up
** Directories
Scripts are in scripts, analysis contains mostly files generated by tools such as multiqc, data contains raw, intermediate data and counts.
** Steps
The steps of the pipeline are as follow :
1. Download with =prefetch= and decompress with =fastq-dump=
2. Quality control with =fastqc= and =multiqc=
3. Adapter trimming with =cutadapt= [fn:cut]
4. Pseudo-mapping and quantification with =salmon=
5. Importation/transcript quantification are done with =tximeta=
6. DEG analysis with =DESeq2=
7. Clustering analysis with =WGCNA=
** Workflow tools
- steps 2-3-4 are performed via =Snakemake=
- steps 5-6 through a =shiny= interface
  
* Usage 

** From raw data (reads)
1. [[https://www.git-scm.com/docs/git-clone][Clone]] this repository (~git clone https://github.com/paulimer/RNA-seq-analysis-pipeline~)
2. Create a directory =seqs= under =data= (path relative to project root : =data/seqs=)
3. Put your fastq files there (these can be compressed files)
4. Alternatively, download files from SRA with the =download_dump.py= script.
   For that follow those steps :
   1. Download the Accession list from the SRA, and save it under =SRR_Acc_List.txt= in the project root
   2. *In progress* there are options for single and paired-end download
   3. Run ~python scripts/download_dump.py~ from the project root
5. Install [[https://github.com/conda-forge/miniforge#mambaforge][Mambaforge]]
6. Run ~mamba env create --name name_of_env --file salmon_env.yaml~ in a terminal
7. Run ~conda activate name_of_env~
8. Edit the config file
   For instance with the file containing the names of the samples 
9. Run ~snakemake --snakefile <snakefile-chosen> --cores number_of_cores_chosen~
   You can choose between to snakefile, one for single end (=snakefile_single=) and one for paired end data (=snakefile_paired=).
   The minimum number of cores is two, because that's to pipe cutadapt into salmon and reduce disk usage
10. Quality control check in =./analysis=
11. Run ~R -e "shiny::runApp('/scripts/shiny')"~ for the rest of the analysis


** From a raw counts table
1. [[https://www.git-scm.com/docs/git-clone][Clone]] this repository (~git clone https://github.com/paulimer/RNA-seq-analysis-pipeline~)
2. Create a sample data table, with a /names/ colum containing the sample names as specified in the counts table, and additional variables, such as this :
| names      | condition |
|------------+-----------|
| SRR7798788 | vehicle   |
| SRR7798789 | PDGF_BB   |
| SRR7798790 | TGF_beta  |
| SRR7798791 | vehicle   |
| SRR7798792 | PDGF_BB   |
| SRR7798793 | TGF_beta  |
| SRR7798794 | vehicle   |
| SRR7798795 | PDGF_BB   |
| SRR7798796 | TGF_beta  |

Ideally, one should not use symbols such as =-=, =/= and spaces in the names or other column of this sample data table.

3. Run ~R -e "shiny::runApp('/scripts/shiny')"~ 





[fn:cut] https://doi.org/10.14806/ej.17.1.200
